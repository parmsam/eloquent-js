---
title: "ch06 - secret life objects"
format: html
---

# Abstract data types

- An abstract data type (ADT) is a subprogram that may contain arbitrarily complicated code but exposes a limited set of methods and properties that people working with it are supposed to use. 
- It is the same as a class in object-oriented programming.
- You can think of JavaScript’s built-in data structures, such as arrays and strings, as such reusable abstract data types.
- Each abstract data type has an interface, the collection of operations that external code can perform on it.

# Methods

-  In JavaScript, methods are nothing more than properties that hold function values.
- Here's a simple method:

```{ojs}
function speak(line) {
  console.log(`The ${this.type} rabbit says '${line}'`);
}
let whiteRabbit = {type: "white", speak};
let hungryRabbit = {type: "hungry", speak};

whiteRabbit.speak("Oh my fur and whiskers");
// → The white rabbit says 'Oh my fur and whiskers'
hungryRabbit.speak("Got any carrots?");
// → The hungry rabbit says 'Got any carrots?'
```

- When a function is called as a method—looked up as a property and immediately called, as in `object.method()`. The binding called `this` in its body automatically points at the object on which it was called.

# Prototypes

# Classes

# Private Properties

# Overriding derived properties

# Maps

# Polymorphism

# Getters, setters, and statics

# Symbols

# The iterator interface

# Inheritance

# The instanceof operator
